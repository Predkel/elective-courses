2016-09-04 16:21:01,594 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:21:01,597 ERROR - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@31a5c39e] to prepare test instance [by.it.academy.adorop.service.implementations.with.mocks.CourseServiceWithMocksTest@59696551]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:253)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 37 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 54 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.ehCacheManagerFactoryBean(<generated>)
	at by.it.academy.adorop.dao.config.PersistenceConfig.cacheManager(PersistenceConfig.java:74)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.CGLIB$cacheManager$2(<generated>)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb$$FastClassBySpringCGLIB$$e43e5eee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.cacheManager(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 55 more
Caused by: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at net.sf.ehcache.CacheManager.assertNoCacheManagerExistsWithSameName(CacheManager.java:529)
	at net.sf.ehcache.CacheManager.init(CacheManager.java:374)
	at net.sf.ehcache.CacheManager.<init>(CacheManager.java:259)
	at org.springframework.cache.ehcache.EhCacheManagerFactoryBean.afterPropertiesSet(EhCacheManagerFactoryBean.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 74 more
2016-09-04 16:21:01,643 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@378f002a: startup date [Sun Sep 04 16:21:01 EET 2016]; root of context hierarchy
2016-09-04 16:21:01,726 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:21:01,727 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:01,727 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:01,728 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:01,728 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:01,729 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.ServiceTestConfigWithMocks]
2016-09-04 16:21:01,789 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:21:01,791 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:21:01,802 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 11 ms.
2016-09-04 16:21:01,802 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:21:01,806 INFO  - Executed SQL script from class path resource [courses-data.sql] in 4 ms.
2016-09-04 16:21:01,824 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:21:01,932 INFO  - Initializing EhCache CacheManager
2016-09-04 16:21:01,938 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
2016-09-04 16:21:01,939 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:21:01,941 ERROR - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@31a5c39e] to prepare test instance [by.it.academy.adorop.service.implementations.with.mocks.CourseServiceWithMocksTest@d5556bf]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:253)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 37 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 54 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.ehCacheManagerFactoryBean(<generated>)
	at by.it.academy.adorop.dao.config.PersistenceConfig.cacheManager(PersistenceConfig.java:74)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.CGLIB$cacheManager$2(<generated>)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb$$FastClassBySpringCGLIB$$e43e5eee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.cacheManager(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 55 more
Caused by: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at net.sf.ehcache.CacheManager.assertNoCacheManagerExistsWithSameName(CacheManager.java:529)
	at net.sf.ehcache.CacheManager.init(CacheManager.java:374)
	at net.sf.ehcache.CacheManager.<init>(CacheManager.java:259)
	at org.springframework.cache.ehcache.EhCacheManagerFactoryBean.afterPropertiesSet(EhCacheManagerFactoryBean.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 74 more
2016-09-04 16:21:01,968 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@18f55704: startup date [Sun Sep 04 16:21:01 EET 2016]; root of context hierarchy
2016-09-04 16:21:02,082 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:21:02,084 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:02,085 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:02,085 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:02,085 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:21:02,087 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.ServiceTestConfigWithMocks]
2016-09-04 16:21:02,127 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:21:02,129 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:21:02,139 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 10 ms.
2016-09-04 16:21:02,139 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:21:02,144 INFO  - Executed SQL script from class path resource [courses-data.sql] in 5 ms.
2016-09-04 16:21:02,188 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:21:02,318 INFO  - Initializing EhCache CacheManager
2016-09-04 16:21:02,325 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
2016-09-04 16:21:02,326 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:21:02,328 ERROR - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@31a5c39e] to prepare test instance [by.it.academy.adorop.service.implementations.with.mocks.CourseServiceWithMocksTest@71b639d0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:253)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cacheManager' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1123)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1018)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 37 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cache.CacheManager]: Factory method 'cacheManager' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 54 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.ehCacheManagerFactoryBean(<generated>)
	at by.it.academy.adorop.dao.config.PersistenceConfig.cacheManager(PersistenceConfig.java:74)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.CGLIB$cacheManager$2(<generated>)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb$$FastClassBySpringCGLIB$$e43e5eee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at by.it.academy.adorop.service.implementations.PersistenceTestConfig$$EnhancerBySpringCGLIB$$6c5ec3fb.cacheManager(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 55 more
Caused by: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@33f98231]
	at net.sf.ehcache.CacheManager.assertNoCacheManagerExistsWithSameName(CacheManager.java:529)
	at net.sf.ehcache.CacheManager.init(CacheManager.java:374)
	at net.sf.ehcache.CacheManager.<init>(CacheManager.java:259)
	at org.springframework.cache.ehcache.EhCacheManagerFactoryBean.afterPropertiesSet(EhCacheManagerFactoryBean.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 74 more
2016-09-04 16:21:02,358 WARN  - SQL Error: 42102, SQLState: 42S02
2016-09-04 16:21:02,359 ERROR - Ð¢Ð°Ð±Ð»Ð¸Ñ†Ð° "HIBERNATE_SEQUENCE" Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð°
Table "HIBERNATE_SEQUENCE" not found; SQL statement:
select next_val as id_val from hibernate_sequence for update [42102-191]
2016-09-04 16:21:02,365 WARN  - SQL Error: 42102, SQLState: 42S02
2016-09-04 16:21:02,365 ERROR - Ð¢Ð°Ð±Ð»Ð¸Ñ†Ð° "USER" Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð°
Table "USER" not found; SQL statement:
select this_.id as id2_2_0_, this_.documentId as document3_2_0_, this_.firstName as firstNam4_2_0_, this_.lastName as lastName5_2_0_, this_.password as password6_2_0_, this_.DTYPE as DTYPE1_2_0_ from User this_ where this_.documentId=? [42102-191]
2016-09-04 16:21:02,377 WARN  - SQL Error: 42102, SQLState: 42S02
2016-09-04 16:21:02,377 ERROR - Ð¢Ð°Ð±Ð»Ð¸Ñ†Ð° "USER" Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð°
Table "USER" not found; SQL statement:
select this_.id as id2_2_0_, this_.documentId as document3_2_0_, this_.firstName as firstNam4_2_0_, this_.lastName as lastName5_2_0_, this_.password as password6_2_0_, this_.DTYPE as DTYPE1_2_0_ from User this_ where this_.documentId=? [42102-191]
2016-09-04 16:21:02,389 INFO  - Closing org.springframework.context.support.GenericApplicationContext@551aa95a: startup date [Sun Sep 04 16:20:57 EET 2016]; root of context hierarchy
2016-09-04 16:21:02,392 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:21:02,397 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:28:48,416 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:28:48,537 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:28:48,547 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@578486a3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@551aa95a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@35d176f7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1dfe2924, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ebc05a6]
2016-09-04 16:28:48,568 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:28:48,570 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:28:48,571 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3a883ce7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4973813a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6321e813, org.springframework.test.context.transaction.TransactionalTestExecutionListener@79be0360, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22a67b4]
2016-09-04 16:28:48,609 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:28:48,610 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:28:48,610 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67205a84, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7d0587f1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5d76b067, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a17b7b6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4f063c0a]
2016-09-04 16:28:50,325 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@76a3e297: startup date [Sun Sep 04 16:28:50 EET 2016]; root of context hierarchy
2016-09-04 16:28:51,367 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:28:51,370 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:51,372 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:51,373 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:51,374 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:52,195 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:28:53,131 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:28:53,235 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 103 ms.
2016-09-04 16:28:53,236 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:28:53,251 INFO  - Executed SQL script from class path resource [courses-data.sql] in 15 ms.
2016-09-04 16:28:53,738 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:28:53,741 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:28:53,745 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:28:53,877 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:28:54,134 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:28:55,749 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:28:56,965 INFO  - Initializing EhCache CacheManager
2016-09-04 16:28:57,336 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3086f480] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:28:57,800 WARN  - SQL Error: 23505, SQLState: 23505
2016-09-04 16:28:57,801 ERROR - Ð�Ð°Ñ€ÑƒÑˆÐµÐ½Ð¸Ðµ ÑƒÐ½Ð¸ÐºÐ°Ð»ÑŒÐ½Ð¾Ð³Ð¾ Ð¸Ð½Ð´ÐµÐºÑ�Ð° Ð¸Ð»Ð¸ Ð¿ÐµÑ€Ð²Ð¸Ñ‡Ð½Ð¾Ð³Ð¾ ÐºÐ»ÑŽÑ‡Ð°: "CONSTRAINT_INDEX_2 ON PUBLIC.USER(DOCUMENTID) VALUES ('adorop88', 10002)"
Unique index or primary key violation: "CONSTRAINT_INDEX_2 ON PUBLIC.USER(DOCUMENTID) VALUES ('adorop88', 10002)"; SQL statement:
insert into User (documentId, firstName, lastName, password, DTYPE, id) values (?, ?, ?, ?, 'Teacher', ?) [23505-191]
2016-09-04 16:28:57,803 INFO  - HHH000010: On release of batch it still contained JDBC statements
2016-09-04 16:28:57,807 ERROR - HHH000346: Error during managed flush [could not execute statement]
2016-09-04 16:28:57,838 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@2d130ac4: startup date [Sun Sep 04 16:28:57 EET 2016]; root of context hierarchy
2016-09-04 16:28:57,922 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:28:57,923 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:57,923 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:57,923 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:57,924 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:57,928 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.with.mocks.ServiceTestConfigWithMocks]
2016-09-04 16:28:58,174 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:28:58,175 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:28:58,358 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 183 ms.
2016-09-04 16:28:58,359 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:28:58,366 INFO  - Executed SQL script from class path resource [courses-data.sql] in 7 ms.
2016-09-04 16:28:58,387 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:28:58,568 INFO  - Initializing EhCache CacheManager
2016-09-04 16:28:58,574 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
2016-09-04 16:28:58,586 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:28:58,590 ERROR - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7d0587f1] to prepare test instance [by.it.academy.adorop.service.implementations.with.mocks.CourseServiceWithMocksTest@713999c2]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:253)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 37 more
Caused by: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
	at net.sf.ehcache.CacheManager.assertNoCacheManagerExistsWithSameName(CacheManager.java:529)
	at net.sf.ehcache.CacheManager.init(CacheManager.java:374)
	at net.sf.ehcache.CacheManager.<init>(CacheManager.java:259)
	at org.springframework.cache.ehcache.EhCacheManagerFactoryBean.afterPropertiesSet(EhCacheManagerFactoryBean.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 52 more
2016-09-04 16:28:58,616 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@74431b9c: startup date [Sun Sep 04 16:28:58 EET 2016]; root of context hierarchy
2016-09-04 16:28:58,721 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:28:58,722 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:58,723 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:58,723 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:58,724 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:58,725 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.with.mocks.ServiceTestConfigWithMocks]
2016-09-04 16:28:58,782 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:28:58,786 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:28:58,818 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 32 ms.
2016-09-04 16:28:58,818 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:28:58,824 INFO  - Executed SQL script from class path resource [courses-data.sql] in 6 ms.
2016-09-04 16:28:58,846 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:28:59,025 INFO  - Initializing EhCache CacheManager
2016-09-04 16:28:59,032 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
2016-09-04 16:28:59,032 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:28:59,035 ERROR - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7d0587f1] to prepare test instance [by.it.academy.adorop.service.implementations.with.mocks.CourseServiceWithMocksTest@590013c7]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:253)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 37 more
Caused by: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
	at net.sf.ehcache.CacheManager.assertNoCacheManagerExistsWithSameName(CacheManager.java:529)
	at net.sf.ehcache.CacheManager.init(CacheManager.java:374)
	at net.sf.ehcache.CacheManager.<init>(CacheManager.java:259)
	at org.springframework.cache.ehcache.EhCacheManagerFactoryBean.afterPropertiesSet(EhCacheManagerFactoryBean.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 52 more
2016-09-04 16:28:59,048 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@62b0bf85: startup date [Sun Sep 04 16:28:59 EET 2016]; root of context hierarchy
2016-09-04 16:28:59,168 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:28:59,169 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:59,170 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:59,170 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:59,171 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:28:59,173 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.with.mocks.ServiceTestConfigWithMocks]
2016-09-04 16:28:59,245 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:28:59,252 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:28:59,271 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 19 ms.
2016-09-04 16:28:59,271 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:28:59,277 INFO  - Executed SQL script from class path resource [courses-data.sql] in 6 ms.
2016-09-04 16:28:59,295 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:28:59,507 INFO  - Initializing EhCache CacheManager
2016-09-04 16:28:59,513 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
2016-09-04 16:28:59,514 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:28:59,516 ERROR - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7d0587f1] to prepare test instance [by.it.academy.adorop.service.implementations.with.mocks.CourseServiceWithMocksTest@6cd45b6c]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:253)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ehCacheManagerFactoryBean' defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig: Invocation of init method failed; nested exception is net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 37 more
Caused by: net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=java.io.BufferedInputStream@1f782c05]
	at net.sf.ehcache.CacheManager.assertNoCacheManagerExistsWithSameName(CacheManager.java:529)
	at net.sf.ehcache.CacheManager.init(CacheManager.java:374)
	at net.sf.ehcache.CacheManager.<init>(CacheManager.java:259)
	at org.springframework.cache.ehcache.EhCacheManagerFactoryBean.afterPropertiesSet(EhCacheManagerFactoryBean.java:162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 52 more
2016-09-04 16:28:59,529 INFO  - Closing org.springframework.context.support.GenericApplicationContext@76a3e297: startup date [Sun Sep 04 16:28:50 EET 2016]; root of context hierarchy
2016-09-04 16:28:59,531 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:28:59,544 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:31:37,948 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:31:37,989 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:31:38,017 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1dfe2924, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ebc05a6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6e6c3152, org.springframework.test.context.transaction.TransactionalTestExecutionListener@50b494a6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3cef309d]
2016-09-04 16:31:39,480 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@7113b13f: startup date [Sun Sep 04 16:31:39 EET 2016]; root of context hierarchy
2016-09-04 16:31:40,709 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:31:40,712 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:31:40,713 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:31:40,714 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:31:40,716 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:31:40,720 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.with.mocks.ServiceTestConfigWithMocks]
2016-09-04 16:31:42,297 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:31:43,160 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:31:43,264 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 104 ms.
2016-09-04 16:31:43,264 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:31:43,278 INFO  - Executed SQL script from class path resource [courses-data.sql] in 14 ms.
2016-09-04 16:31:43,706 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:31:43,709 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:31:43,711 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:31:43,824 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:31:44,147 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:31:45,233 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:31:46,480 INFO  - Initializing EhCache CacheManager
2016-09-04 16:31:47,002 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@5a48da4f] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:31:47,132 INFO  - Closing org.springframework.context.support.GenericApplicationContext@7113b13f: startup date [Sun Sep 04 16:31:39 EET 2016]; root of context hierarchy
2016-09-04 16:31:47,147 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:31:47,180 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:32:43,961 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:32:43,996 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:32:44,007 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@204f30ec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@e25b2fe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@754ba872, org.springframework.test.context.transaction.TransactionalTestExecutionListener@146ba0ac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4dfa3a9d]
2016-09-04 16:32:44,353 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@6f1fba17: startup date [Sun Sep 04 16:32:44 EET 2016]; root of context hierarchy
2016-09-04 16:32:45,037 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:32:45,043 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:32:45,044 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:32:45,045 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:32:45,045 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:32:45,049 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.with.mocks.ServiceTestConfigWithMocks]
2016-09-04 16:32:46,048 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:32:46,205 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:32:46,243 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 38 ms.
2016-09-04 16:32:46,243 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:32:46,249 INFO  - Executed SQL script from class path resource [courses-data.sql] in 6 ms.
2016-09-04 16:32:46,391 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:32:46,392 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:32:46,394 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:32:46,450 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:32:46,580 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:32:47,319 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:32:47,968 INFO  - Initializing EhCache CacheManager
2016-09-04 16:32:48,138 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3efedc6f] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:32:48,240 INFO  - Closing org.springframework.context.support.GenericApplicationContext@6f1fba17: startup date [Sun Sep 04 16:32:44 EET 2016]; root of context hierarchy
2016-09-04 16:32:48,256 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:32:48,263 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:36:03,250 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:36:03,269 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:36:03,272 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@548e7350, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1a968a59, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4667ae56, org.springframework.test.context.transaction.TransactionalTestExecutionListener@77cd7a0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@204f30ec]
2016-09-04 16:36:03,279 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:36:03,280 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:36:03,281 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@13deb50e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@239963d8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3abbfa04, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57fffcd7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@31ef45e3]
2016-09-04 16:36:03,557 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@57536d79: startup date [Sun Sep 04 16:36:03 EET 2016]; root of context hierarchy
2016-09-04 16:36:04,294 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:36:04,314 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:04,315 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:04,315 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:04,316 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:05,292 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:36:05,466 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:36:05,503 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 36 ms.
2016-09-04 16:36:05,503 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:36:05,508 INFO  - Executed SQL script from class path resource [courses-data.sql] in 5 ms.
2016-09-04 16:36:05,649 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:36:05,650 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:36:05,652 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:36:05,728 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:36:05,847 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:36:06,651 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:36:07,440 INFO  - Initializing EhCache CacheManager
2016-09-04 16:36:07,626 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@58ec7116] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:36:07,898 WARN  - SQL Error: 23505, SQLState: 23505
2016-09-04 16:36:07,898 ERROR - Ð�Ð°Ñ€ÑƒÑˆÐµÐ½Ð¸Ðµ ÑƒÐ½Ð¸ÐºÐ°Ð»ÑŒÐ½Ð¾Ð³Ð¾ Ð¸Ð½Ð´ÐµÐºÑ�Ð° Ð¸Ð»Ð¸ Ð¿ÐµÑ€Ð²Ð¸Ñ‡Ð½Ð¾Ð³Ð¾ ÐºÐ»ÑŽÑ‡Ð°: "CONSTRAINT_INDEX_2 ON PUBLIC.USER(DOCUMENTID) VALUES ('adorop88', 10002)"
Unique index or primary key violation: "CONSTRAINT_INDEX_2 ON PUBLIC.USER(DOCUMENTID) VALUES ('adorop88', 10002)"; SQL statement:
insert into User (documentId, firstName, lastName, password, DTYPE, id) values (?, ?, ?, ?, 'Teacher', ?) [23505-191]
2016-09-04 16:36:07,900 INFO  - HHH000010: On release of batch it still contained JDBC statements
2016-09-04 16:36:07,900 ERROR - HHH000346: Error during managed flush [could not execute statement]
2016-09-04 16:36:07,914 INFO  - Closing org.springframework.context.support.GenericApplicationContext@57536d79: startup date [Sun Sep 04 16:36:03 EET 2016]; root of context hierarchy
2016-09-04 16:36:07,924 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:36:07,930 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:36:38,580 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:36:38,602 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:36:38,608 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@548e7350, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1a968a59, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4667ae56, org.springframework.test.context.transaction.TransactionalTestExecutionListener@77cd7a0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@204f30ec]
2016-09-04 16:36:38,617 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:36:38,618 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:36:38,618 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@13deb50e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@239963d8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3abbfa04, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57fffcd7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@31ef45e3]
2016-09-04 16:36:39,006 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@57536d79: startup date [Sun Sep 04 16:36:38 EET 2016]; root of context hierarchy
2016-09-04 16:36:39,958 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:36:39,970 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:39,971 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:39,972 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:39,972 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:40,604 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:36:40,770 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:36:40,808 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 38 ms.
2016-09-04 16:36:40,808 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:36:40,814 INFO  - Executed SQL script from class path resource [courses-data.sql] in 6 ms.
2016-09-04 16:36:40,960 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:36:40,962 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:36:40,964 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:36:41,022 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:36:41,114 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:36:41,765 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:36:42,584 INFO  - Initializing EhCache CacheManager
2016-09-04 16:36:42,761 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@58ec7116] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:36:43,144 WARN  - SQL Error: 23505, SQLState: 23505
2016-09-04 16:36:43,144 ERROR - Ð�Ð°Ñ€ÑƒÑˆÐµÐ½Ð¸Ðµ ÑƒÐ½Ð¸ÐºÐ°Ð»ÑŒÐ½Ð¾Ð³Ð¾ Ð¸Ð½Ð´ÐµÐºÑ�Ð° Ð¸Ð»Ð¸ Ð¿ÐµÑ€Ð²Ð¸Ñ‡Ð½Ð¾Ð³Ð¾ ÐºÐ»ÑŽÑ‡Ð°: "CONSTRAINT_INDEX_2 ON PUBLIC.USER(DOCUMENTID) VALUES ('adorop88', 10002)"
Unique index or primary key violation: "CONSTRAINT_INDEX_2 ON PUBLIC.USER(DOCUMENTID) VALUES ('adorop88', 10002)"; SQL statement:
insert into User (documentId, firstName, lastName, password, DTYPE, id) values (?, ?, ?, ?, 'Teacher', ?) [23505-191]
2016-09-04 16:36:43,146 INFO  - HHH000010: On release of batch it still contained JDBC statements
2016-09-04 16:36:43,150 ERROR - HHH000346: Error during managed flush [could not execute statement]
2016-09-04 16:36:43,169 INFO  - Closing org.springframework.context.support.GenericApplicationContext@57536d79: startup date [Sun Sep 04 16:36:38 EET 2016]; root of context hierarchy
2016-09-04 16:36:43,181 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:36:43,186 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:36:57,732 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:36:57,750 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:36:57,755 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@204f30ec, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@e25b2fe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@754ba872, org.springframework.test.context.transaction.TransactionalTestExecutionListener@146ba0ac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4dfa3a9d]
2016-09-04 16:36:58,031 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@6f1fba17: startup date [Sun Sep 04 16:36:58 EET 2016]; root of context hierarchy
2016-09-04 16:36:59,053 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:36:59,100 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:59,101 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:59,102 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:59,104 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:36:59,108 INFO  - Overriding bean definition for bean 'courseDaoImpl' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.implementations.CourseDaoImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\implementations\CourseDaoImpl.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=serviceTestConfigWithMocks; factoryMethodName=courseDaoImpl; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.with.mocks.ServiceTestConfigWithMocks]
2016-09-04 16:37:00,208 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:37:00,371 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:37:00,405 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 34 ms.
2016-09-04 16:37:00,405 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:37:00,411 INFO  - Executed SQL script from class path resource [courses-data.sql] in 6 ms.
2016-09-04 16:37:00,555 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:37:00,557 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:37:00,558 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:37:00,619 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:37:00,747 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:37:01,510 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:37:02,168 INFO  - Initializing EhCache CacheManager
2016-09-04 16:37:02,348 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3efedc6f] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:37:02,449 INFO  - Closing org.springframework.context.support.GenericApplicationContext@6f1fba17: startup date [Sun Sep 04 16:36:58 EET 2016]; root of context hierarchy
2016-09-04 16:37:02,460 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:37:02,470 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 16:43:18,692 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 16:43:18,707 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 16:43:18,710 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6cc4c815, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a82f6ef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@100fc185, org.springframework.test.context.transaction.TransactionalTestExecutionListener@643b1d11, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ef5e5e3]
2016-09-04 16:43:18,967 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@4dfa3a9d: startup date [Sun Sep 04 16:43:18 EET 2016]; root of context hierarchy
2016-09-04 16:43:19,592 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 16:43:19,600 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:43:19,604 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:43:19,605 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:43:19,610 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 16:43:20,509 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 16:43:20,816 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 16:43:20,862 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 46 ms.
2016-09-04 16:43:20,862 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 16:43:20,869 INFO  - Executed SQL script from class path resource [courses-data.sql] in 7 ms.
2016-09-04 16:43:21,007 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 16:43:21,008 INFO  - HHH000206: hibernate.properties not found
2016-09-04 16:43:21,009 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 16:43:21,075 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 16:43:21,172 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 16:43:21,816 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 16:43:22,608 INFO  - Initializing EhCache CacheManager
2016-09-04 16:43:22,801 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@5d1b9c3d] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 16:43:22,965 INFO  - Closing org.springframework.context.support.GenericApplicationContext@4dfa3a9d: startup date [Sun Sep 04 16:43:18 EET 2016]; root of context hierarchy
2016-09-04 16:43:22,970 INFO  - Shutting down EhCache CacheManager
2016-09-04 16:43:22,975 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 17:04:33,584 ERROR - by.it.academy.adorop.service.exceptions.ServiceException: java.lang.Throwable
2016-09-04 17:06:37,414 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener]
2016-09-04 17:06:37,430 INFO  - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@c86b9e3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@10aa41f2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3af9c5b7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@37271612, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ed7f8b4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4c309d4d, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@38102d01]
2016-09-04 17:06:37,436 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener]
2016-09-04 17:06:37,437 INFO  - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@68e5eea7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@291b4bf5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2d2ffcb7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@762ef0ea, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31f9b85e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@424e1977, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@10d68fcd]
2016-09-04 17:06:37,574 ERROR - by.it.academy.adorop.service.exceptions.ServiceException: java.lang.Throwable
2016-09-04 17:06:38,536 INFO  - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7e22550a: startup date [Sun Sep 04 17:06:38 EET 2016]; root of context hierarchy
2016-09-04 17:06:39,067 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 17:06:39,069 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:06:39,070 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:06:39,070 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:06:39,071 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:06:39,283 INFO  - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-09-04 17:06:39,808 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 17:06:39,963 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 17:06:40,008 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 45 ms.
2016-09-04 17:06:40,008 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 17:06:40,029 INFO  - Executed SQL script from class path resource [courses-data.sql] in 21 ms.
2016-09-04 17:06:40,209 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 17:06:40,210 INFO  - HHH000206: hibernate.properties not found
2016-09-04 17:06:40,212 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 17:06:40,266 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 17:06:40,434 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 17:06:41,144 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 17:06:42,331 INFO  - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c059a68, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d93f75b, org.springframework.security.web.header.HeaderWriterFilter@697d6ded, org.springframework.security.web.authentication.logout.LogoutFilter@79a13920, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1d4f5506, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f281aaf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24c685e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21ea996f, org.springframework.security.web.session.SessionManagementFilter@160b4809, org.springframework.security.web.access.ExceptionTranslationFilter@611b35d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2233cac0]
2016-09-04 17:06:43,009 INFO  - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7e22550a: startup date [Sun Sep 04 17:06:38 EET 2016]; root of context hierarchy
2016-09-04 17:06:43,176 INFO  - Mapped URL path [/js/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-09-04 17:06:43,265 INFO  - Mapped "{[/courses],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<java.util.List<by.it.academy.adorop.model.Course>> by.it.academy.adorop.web.controllers.CourseController.getBunch(int,int)
2016-09-04 17:06:43,277 INFO  - Mapped "{[/students/current],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public U by.it.academy.adorop.web.controllers.AbstractUserController.getCurrent(U)
2016-09-04 17:06:43,277 INFO  - Mapped "{[/students],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity by.it.academy.adorop.web.controllers.AbstractUserController.createNew(U,org.springframework.validation.Errors)
2016-09-04 17:06:43,281 INFO  - Mapped "{[/teachers/current],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public U by.it.academy.adorop.web.controllers.AbstractUserController.getCurrent(U)
2016-09-04 17:06:43,282 INFO  - Mapped "{[/teachers],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity by.it.academy.adorop.web.controllers.AbstractUserController.createNew(U,org.springframework.validation.Errors)
2016-09-04 17:06:43,357 INFO  - Detected @ExceptionHandler methods in exceptionHandlerAdvice
2016-09-04 17:06:43,428 INFO  - Initializing EhCache CacheManager
2016-09-04 17:06:43,696 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@774d8276] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 17:06:43,878 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:06:43,879 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:06:43,904 INFO  - FrameworkServlet '': initialization completed in 25 ms
2016-09-04 17:06:44,158 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:06:44,159 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:06:44,163 INFO  - FrameworkServlet '': initialization completed in 4 ms
2016-09-04 17:06:46,022 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:06:46,022 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:06:46,034 INFO  - FrameworkServlet '': initialization completed in 12 ms
2016-09-04 17:06:46,365 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:06:46,365 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:06:46,369 INFO  - FrameworkServlet '': initialization completed in 4 ms
2016-09-04 17:06:46,388 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:06:46,388 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:06:46,399 INFO  - FrameworkServlet '': initialization completed in 11 ms
2016-09-04 17:06:46,858 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:06:46,858 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:06:46,861 INFO  - FrameworkServlet '': initialization completed in 3 ms
2016-09-04 17:06:46,950 INFO  - Closing org.springframework.web.context.support.GenericWebApplicationContext@7e22550a: startup date [Sun Sep 04 17:06:38 EET 2016]; root of context hierarchy
2016-09-04 17:06:46,960 INFO  - Shutting down EhCache CacheManager
2016-09-04 17:06:46,972 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 17:07:47,322 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener]
2016-09-04 17:07:47,355 INFO  - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6236eb5f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c1e2a9e, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@fa36558, org.springframework.test.context.support.DirtiesContextTestExecutionListener@672872e1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@32910148, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f56875e, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@2b4bac49]
2016-09-04 17:07:47,382 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener]
2016-09-04 17:07:47,382 INFO  - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@60015ef5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f54a33d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1018bde2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@65b3f4a4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@f2ff811, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@568ff82, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@50caa560]
2016-09-04 17:07:47,578 ERROR - by.it.academy.adorop.service.exceptions.ServiceException: java.lang.Throwable
2016-09-04 17:07:48,497 INFO  - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@21baa903: startup date [Sun Sep 04 17:07:48 EET 2016]; root of context hierarchy
2016-09-04 17:07:48,970 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 17:07:48,971 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:07:48,972 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:07:48,972 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:07:48,973 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=abstractIntegrationTest.TestPersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in integration.by.it.academy.adorop.web.controllers.AbstractIntegrationTest$TestPersistenceConfig]
2016-09-04 17:07:49,200 INFO  - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2016-09-04 17:07:49,662 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 17:07:49,865 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 17:07:49,924 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 59 ms.
2016-09-04 17:07:49,924 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 17:07:49,936 INFO  - Executed SQL script from class path resource [courses-data.sql] in 12 ms.
2016-09-04 17:07:50,147 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 17:07:50,150 INFO  - HHH000206: hibernate.properties not found
2016-09-04 17:07:50,152 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 17:07:50,231 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 17:07:50,391 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 17:07:51,250 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 17:07:52,441 INFO  - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e7af36e, org.springframework.security.web.context.SecurityContextPersistenceFilter@2401856, org.springframework.security.web.header.HeaderWriterFilter@4e8b357d, org.springframework.security.web.authentication.logout.LogoutFilter@39b626e5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@76f2dad9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a4f8009, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48268eec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1283ca23, org.springframework.security.web.session.SessionManagementFilter@7d42404e, org.springframework.security.web.access.ExceptionTranslationFilter@1b57c345, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36c7cbe1]
2016-09-04 17:07:52,954 INFO  - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@21baa903: startup date [Sun Sep 04 17:07:48 EET 2016]; root of context hierarchy
2016-09-04 17:07:53,035 INFO  - Detected @ExceptionHandler methods in exceptionHandlerAdvice
2016-09-04 17:07:53,096 INFO  - Mapped "{[/courses],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<java.util.List<by.it.academy.adorop.model.Course>> by.it.academy.adorop.web.controllers.CourseController.getBunch(int,int)
2016-09-04 17:07:53,100 INFO  - Mapped "{[/students/current],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public U by.it.academy.adorop.web.controllers.AbstractUserController.getCurrent(U)
2016-09-04 17:07:53,100 INFO  - Mapped "{[/students],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity by.it.academy.adorop.web.controllers.AbstractUserController.createNew(U,org.springframework.validation.Errors)
2016-09-04 17:07:53,102 INFO  - Mapped "{[/teachers/current],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public U by.it.academy.adorop.web.controllers.AbstractUserController.getCurrent(U)
2016-09-04 17:07:53,102 INFO  - Mapped "{[/teachers],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity by.it.academy.adorop.web.controllers.AbstractUserController.createNew(U,org.springframework.validation.Errors)
2016-09-04 17:07:53,147 INFO  - Mapped URL path [/js/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-09-04 17:07:53,207 INFO  - Initializing EhCache CacheManager
2016-09-04 17:07:53,495 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@47569167] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 17:07:53,705 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:07:53,705 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:07:53,732 INFO  - FrameworkServlet '': initialization completed in 27 ms
2016-09-04 17:07:53,839 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:07:53,839 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:07:53,846 INFO  - FrameworkServlet '': initialization completed in 7 ms
2016-09-04 17:07:54,232 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:07:54,232 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:07:54,238 INFO  - FrameworkServlet '': initialization completed in 6 ms
2016-09-04 17:07:54,417 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:07:54,417 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:07:54,420 INFO  - FrameworkServlet '': initialization completed in 3 ms
2016-09-04 17:07:54,432 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:07:54,433 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:07:54,440 INFO  - FrameworkServlet '': initialization completed in 7 ms
2016-09-04 17:07:54,481 INFO  - Initializing Spring FrameworkServlet ''
2016-09-04 17:07:54,481 INFO  - FrameworkServlet '': initialization started
2016-09-04 17:07:54,484 INFO  - FrameworkServlet '': initialization completed in 3 ms
2016-09-04 17:07:54,580 INFO  - Closing org.springframework.web.context.support.GenericWebApplicationContext@21baa903: startup date [Sun Sep 04 17:07:48 EET 2016]; root of context hierarchy
2016-09-04 17:07:54,600 INFO  - Shutting down EhCache CacheManager
2016-09-04 17:07:54,611 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
2016-09-04 17:13:30,383 INFO  - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-09-04 17:13:30,398 INFO  - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
2016-09-04 17:13:30,401 INFO  - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6cc4c815, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a82f6ef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@100fc185, org.springframework.test.context.transaction.TransactionalTestExecutionListener@643b1d11, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ef5e5e3]
2016-09-04 17:13:30,645 INFO  - Refreshing org.springframework.context.support.GenericApplicationContext@4dfa3a9d: startup date [Sun Sep 04 17:13:30 EET 2016]; root of context hierarchy
2016-09-04 17:13:31,310 INFO  - Overriding bean definition for bean 'catchAndRethrowAnnotationHandlerBeanPostProcessor' with a different definition: replacing [Generic bean: class [by.it.academy.adorop.dao.utils.CatchAndRethrowAnnotationHandlerBeanPostProcessor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\JAVA\projects\elective-courses\dao\target\classes\by\it\academy\adorop\dao\utils\CatchAndRethrowAnnotationHandlerBeanPostProcessor.class]] with [Root bean: class [by.it.academy.adorop.service.config.ServiceConfig]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=catchAndRethrowAnnotationHandlerBeanPostProcessor; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.config.ServiceConfig]
2016-09-04 17:13:31,321 INFO  - Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 17:13:31,322 INFO  - Overriding bean definition for bean 'ehCacheManagerFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=ehCacheManagerFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 17:13:31,322 INFO  - Overriding bean definition for bean 'sessionFactoryBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=sessionFactoryBean; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 17:13:31,323 INFO  - Overriding bean definition for bean 'cacheManager' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=by.it.academy.adorop.dao.config.PersistenceConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class by.it.academy.adorop.dao.config.PersistenceConfig] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=persistenceTestConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in by.it.academy.adorop.service.implementations.PersistenceTestConfig]
2016-09-04 17:13:32,206 INFO  - Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2016-09-04 17:13:32,529 INFO  - Executing SQL script from class path resource [courses-ddl.sql]
2016-09-04 17:13:32,570 INFO  - Executed SQL script from class path resource [courses-ddl.sql] in 41 ms.
2016-09-04 17:13:32,570 INFO  - Executing SQL script from class path resource [courses-data.sql]
2016-09-04 17:13:32,578 INFO  - Executed SQL script from class path resource [courses-data.sql] in 7 ms.
2016-09-04 17:13:32,717 INFO  - HHH000412: Hibernate Core {5.0.7.Final}
2016-09-04 17:13:32,718 INFO  - HHH000206: hibernate.properties not found
2016-09-04 17:13:32,719 INFO  - HHH000021: Bytecode provider name : javassist
2016-09-04 17:13:32,791 INFO  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-09-04 17:13:32,881 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-09-04 17:13:33,587 INFO  - HV000001: Hibernate Validator 5.2.2.Final
2016-09-04 17:13:34,580 INFO  - Initializing EhCache CacheManager
2016-09-04 17:13:34,759 INFO  - Using DataSource [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@69e05f61] of Hibernate SessionFactory for HibernateTransactionManager
2016-09-04 17:13:34,926 INFO  - Closing org.springframework.context.support.GenericApplicationContext@4dfa3a9d: startup date [Sun Sep 04 17:13:30 EET 2016]; root of context hierarchy
2016-09-04 17:13:34,931 INFO  - Shutting down EhCache CacheManager
2016-09-04 17:13:34,936 INFO  - Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false'
